#!/usr/bin/env python3

import sys, string
from itertools import takewhile, count


# `printable' is a string, so a set is better.
PRINTABLE = set(string.printable)
PRINTABLE.discard('\n')


def hexdumpc(rs):
    """An alternative of `hexdump -C'"""
    for i in takewhile(lambda j: rs[j:j + 16], count(step=16)):
        buf = rs[i:i + 16]
        print('  '.join([
            '{:08x}'.format(i),
            '{:23}  {:23}'.format(*map(lambda ss: \
                    ' '.join('{:02x}'.format(ord(c)) for c in ss),
                (buf[:8], buf[8:]))),
            '|{}|'.format(''.join(c if c in PRINTABLE else '.' for c in buf))
        ]))
        line = i
        last_bufsiz = len(buf)

    # Handle last line to indicate tail's size.
    line += last_bufsiz
    print('{:08x}'.format(line))


# Reading from sys.stdin is unbuffered.
hexdumpc(sys.stdin.read())
