#!/usr/bin/env node

/**
 *  passalt-cli
 *  ===========
 *
 *  passalt.js in command line, please install it first.
 *
 *  Note: It's better to append a prefix whitespace when generating tokens,
 *  which usually tells the shell not to log it into history files.
 *
 *  @author AnqurVanillapy
 *  @date 19 August 2017
 *  @version 0.1.1
 */

'use strict'

const requireg = l => require(`/usr/local/lib/node_modules/${l}`)
const [generate, check] = requireg('passalt')

const USAGE =
`Usage:
  passalt new PASSWORD
  passalt check PASSWORD TOKEN
  passalt check PASSWORD # through pipe`

function showUsage () {
  console.error(USAGE)
  process.exit(1)
}

function getLine () {
  return new Promise((resolve, reject) => {
    process.stdin.resume()
    process.stdin.once('data', l => {
      const line = l.toString().trim().replace(/[\n\r]/g, '')
      process.stdin.pause()
      if (!line) reject(new Error('cannot read from stdout (pipe)'))
      else resolve(line)
    })
  })
}

;(async () => {
  // `argv[0]' and `argv[1]' are `node' and `passalt'.
  if (![4, 5].includes(process.argv.length)) showUsage()

  switch (process.argv[2]) {
    case 'new':
      process.stdout.write(generate(process.argv[3]))
      break
    case 'check':
      try {
        const token = process.argv[4] || await getLine()
        process.exit(!check(token, process.argv[3]))
      } catch (err) {
        throw err
      }
    default: showUsage()
  }
})()
